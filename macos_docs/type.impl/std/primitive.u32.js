(function() {var type_impls = {
"cocoa":[],
"core_foundation":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromMutVoid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#313-317\">source</a><a href=\"#impl-FromMutVoid-for-u32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"core_foundation/base/trait.FromMutVoid.html\" title=\"trait core_foundation::base::FromMutVoid\">FromMutVoid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_mut_void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#314-316\">source</a><a href=\"#method.from_mut_void\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation/base/trait.FromMutVoid.html#tymethod.from_mut_void\" class=\"fn\">from_mut_void</a>&lt;'a&gt;(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut </a><a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a>) -&gt; <a class=\"struct\" href=\"core_foundation/base/struct.ItemMutRef.html\" title=\"struct core_foundation::base::ItemMutRef\">ItemMutRef</a>&lt;'a, Self&gt;</h4></section></div></details>","FromMutVoid","core_foundation::base::mach_port_t","core_foundation::base::UInt32","core_foundation::base::UTF32Char","core_foundation::number::CFNumberType","core_foundation::string::CFStringEncoding"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromVoid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#341-347\">source</a><a href=\"#impl-FromVoid-for-u32\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"core_foundation/base/trait.FromVoid.html\" title=\"trait core_foundation::base::FromVoid\">FromVoid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_void\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/core_foundation/base.rs.html#342-346\">source</a><a href=\"#method.from_void\" class=\"anchor\">ยง</a><h4 class=\"code-header\">unsafe fn <a href=\"core_foundation/base/trait.FromVoid.html#tymethod.from_void\" class=\"fn\">from_void</a>&lt;'a&gt;(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const </a><a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/std/os/raw/type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a>) -&gt; <a class=\"struct\" href=\"core_foundation/base/struct.ItemRef.html\" title=\"struct core_foundation::base::ItemRef\">ItemRef</a>&lt;'a, Self&gt;</h4></section></div></details>","FromVoid","core_foundation::base::mach_port_t","core_foundation::base::UInt32","core_foundation::base::UTF32Char","core_foundation::number::CFNumberType","core_foundation::string::CFStringEncoding"]],
"core_foundation_sys":[],
"core_graphics":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()