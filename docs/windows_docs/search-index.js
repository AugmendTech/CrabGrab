var searchIndex = new Map(JSON.parse('[\
["crabgrab",{"doc":"A cross-platform screen/window/audio capture library","t":"CCCCCCCTFFGFFFFFFTTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPPFPFFGGFPPPPPPPGGGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCPGFFFFPPPPPKGGPNNNNNNNNNNNNNNNOOONNOOONNNNNNNNNNMOOONNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNOOOPKKGNNNNNNNNNMMMNNNNNNNPPKGKGNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNPGNNNNNHNNNPPPPPPPKKGKGNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNMGGGFFGPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFKNNNNNNNNNNNMNNNNNFFFTNNNNNNNNNNNNNNNNNNONNNONNNNNNONNNNNNNNNNNNOOO","n":["capturable_content","capture_stream","feature","frame","platform","prelude","util","ALL_WINDOWS","CapturableApplication","CapturableContent","CapturableContentError","CapturableContentFilter","CapturableDisplay","CapturableDisplayIterator","CapturableWindow","CapturableWindowFilter","CapturableWindowIterator","DISPLAYS","EVERYTHING","EVERYTHING_NORMAL","NORMAL_WINDOWS","Other","application","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone_into","clone_into","clone_into","default","description","desktop_windows","displays","displays","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_native_window_handle","hash","identifier","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_visible","len","name","new","next","next","onscreen_only","rect","rect","size_hint","size_hint","source","title","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","windows","windows","AlreadyStopped","Argb2101010","Audio","AudioCaptureConfig","Bgra8888","CaptureAccessToken","CaptureConfig","CaptureConfigError","CapturePixelFormat","CaptureStream","End","F420","Idle","InvalidBufferCount","Other","Other","Other","StreamCreateError","StreamError","StreamEvent","StreamStopError","UnsupportedPixelFormat","UnsupportedPixelFormat","V420","Video","allows_borderless","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","cause","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","description","description","description","description","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_dx11_device","get_dxgi_adapter","get_dxgi_device","get_wgpu_device","get_wgpu_device_wrapper","into","into","into","into","into","into","into","into","into","into","new","new","request_access","source","source","source","source","stop","supported_pixel_formats","test_access","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_buffer_count","with_display","with_output_size","with_show_cursor","with_wgpu_device","with_window","bitmap","dx11","dxgi","screenshot","wgpu","BgraUnorm8x4","FrameBitmap","FrameBitmapBgraUnorm8x4","FrameBitmapRgbaF16x4","FrameBitmapRgbaUnormPacked1010102","FrameBitmapYCbCr","Full","Other","RgbaF16x4","RgbaUnormPacked1010102","Video","VideoFrameBitmap","VideoFrameBitmapError","VideoRange","YCbCr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","chroma_data","chroma_height","chroma_width","clone","clone_into","data","data","data","description","fmt","fmt","from","from","from","from","from","from","from","get_bitmap","height","height","height","into","into","into","into","into","into","into","luma_data","luma_height","luma_width","range","source","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","Other","WindowsDx11CaptureStream","WindowsDx11VideoFrame","WindowsDx11VideoFrameError","borrow","borrow_mut","cause","clone","clone_into","description","fmt","fmt","from","get_dx11_device","get_dx11_surface","get_dx11_texture","into","source","to_owned","to_string","try_from","try_into","type_id","NoAdapter","Other","WindowsDxgiCaptureStream","WindowsDxgiCaptureStreamError","WindowsDxgiVideoFrame","WindowsDxgiVideoFrameError","borrow","borrow","borrow_mut","borrow_mut","cause","cause","clone","clone_into","description","description","fmt","fmt","fmt","fmt","from","from","get_dxgi_adapter","get_dxgi_device","get_dxgi_surface","into","into","source","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Other","ScreenshotError","borrow","borrow_mut","fmt","from","into","take_screenshot","try_from","try_into","type_id","Chroma","InvalidVideoPlaneTexture","Luminance","NoBackendTexture","NoWgpuDevice","Other","Rgba","WgpuCaptureConfigExt","WgpuCaptureStreamExt","WgpuVideoFrameError","WgpuVideoFrameExt","WgpuVideoFramePlaneTexture","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","description","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","get_wgpu_device","get_wgpu_device_wrapper","get_wgpu_texture","into","into","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_wgpu_device","AudioBufferError","AudioChannelCount","AudioChannelData","AudioChannelDataSamples","AudioFrame","AudioSampleRate","F32","Hz16000","Hz24000","Hz48000","Hz8000","I16","I32","InvalidChannel","Mono","Other","Stereo","UnsupportedFormat","VideoFrame","audio_channel_buffer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_time","channel_count","clone","clone","clone_into","clone_into","dpi","duration","fmt","fmt","fmt","fmt","frame_id","frame_id","from","from","from","from","from","from","from","get","get_bitmap","get_dx11_surface","get_dx11_texture","get_dxgi_surface","get_wgpu_texture","into","into","into","into","into","into","into","length","origin_time","origin_time","sample_rate","size","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","windows","HWND","WindowsCapturableWindowNativeWindowHandle","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","get_native_window_handle","into","to_owned","try_from","try_into","type_id","Point","Rect","Size","ZERO","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","height","into","into","into","origin","scaled","scaled","scaled","scaled_2d","scaled_2d","scaled_2d","size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","x","y"],"q":[[0,"crabgrab"],[7,"crabgrab::capturable_content"],[131,"crabgrab::capture_stream"],[298,"crabgrab::feature"],[303,"crabgrab::feature::bitmap"],[393,"crabgrab::feature::dx11"],[416,"crabgrab::feature::dxgi"],[454,"crabgrab::feature::screenshot"],[465,"crabgrab::feature::wgpu"],[512,"crabgrab::frame"],[608,"crabgrab::platform"],[609,"crabgrab::platform::windows"],[628,"crabgrab::util"],[677,"core::error"],[678,"core::option"],[679,"core::fmt"],[680,"core::fmt"],[681,"alloc::string"],[682,"core::result"],[683,"core::any"],[684,"windows::Win32::Graphics::Direct3D11"],[685,"windows::Win32::Graphics::Dxgi"],[686,"windows::Win32::Graphics::Dxgi"],[687,"core::convert"],[688,"alloc::sync"],[689,"core::ops::function"],[690,"core::marker"],[691,"windows::Graphics::DirectX::Direct3D11"],[692,"windows::Graphics::DirectX"],[693,"windows::Win32::Graphics::Direct3D11"],[694,"core::time"],[695,"core::marker"]],"d":["Enumeration of capturable items","The actual capture stream and related constructs","Extension features","Audio and video frames","Platform-specific extensions","Everything","Geometry types","","Represents an application with capturable windows","A collection of capturable content (windows, screens)","Represents an error that occurred when enumerating …","Selects the kind of capturable content to enumerate","Represents a capturable display","An iterator over capturable displays","Represents a capturable application window","Selects the kind of windows to enumerate for capture","An iterator over capturable windows","","","","","","Gets the application that owns this window","","","","","","","","","","","","","","","","","","","","","","","","","","","","Desktop windows are elements of the desktop environment, …","Get an iterator over the capturable displays","Whether to enumerate capturable displays","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the “identifier” of the application","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether this filter allows any capturable content","Checks whether an application is visible (on-screen, not …","","Gets the friendly name of the application","Requests capturable content from the OS","","","Whether to restrict to onscreen windows","Gets the virtual screen rectangle of the window","Gets the virtual screen rectangle of this display","","","","Gets the title of the window","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an iterator over the capturable windows","What kind of capturable windows, if Some, to enumerate","The stream was already stopped","One plane, 4 channels, 10 bits per color channel, two bits …","This event is produced when the stream receives a new …","Configuration settings for audio streams","One plane, 4 channels, 8 bits per channel: { b: u8, g: u8, …","Represents programmatic capture access","Configuration settings for a capture stream","Represents an error creating the capture config","The pixel format of returned video frames","Represents an active capture stream","This event is produced once at the end of the stream","Two planes:","This event is produced when the stream goes idle - IE when …","The buffer count is out of the valid range for the …","","","","This represents an error when creating a capture stream","This represents an error during a stream, for example a …","Represents an event in a capture stream","This represents an error while stopping a stream","The supplied pixel format is unsupported by the …","The pixel format is unsupported by the implementation","Two planes:","This event is produced when the stream receives a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Start a new capture stream with the given stream callback","Creates a new audio capture config with default settings:","Prompt the user for permission to capture content","","","","","Stop the capture","Gets the implementation’s supported pixel formats","Test whether the calling application has permission to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configure the buffer count - the number of frames in the …","Create a capture configuration for a given capturable …","Configure the output texture size - by default, this will …","Configure whether the cursor is visible in the capture","Supply a Wgpu device to the config, allowing the …","Create a capture configuration for a given capturable …","Frame to Bitmap conversion (requires <code>bitmap</code> feature)","Frame -&gt; DX11 Surface/Texture conversion (requires <code>dx11</code> …","Frame -&gt; DXGI Surface conversion (requires <code>dxgi</code> feature)","Screenshot utility function (requires <code>screenshot</code> feature)","Frame -&gt; Wgpu Texture conversion (requires <code>wgpu</code> feature)","","A bitmap image of the selected format","A Bgra8888 format bitmap","A RgbaF16x4 format bitmap","A Rgba1010102 format bitmap","A YCbCr image, corresponding to either V420 or F420 pixel …","Luma: [0, 255], Chroma: [0, 255]","","","","Luma: [16, 240], Chroma: [0, 255]","A video frame which can produce a bitmap","Represents an error while generating a frame bitmap","The video range for a YCbCr format bitmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a bitmap image from this frame. This usually …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A capture stream which can inter-operate with DX11","A video frame which can yield a DX11 surface","","","","","","","","","","Returns the argument unchanged.","Get the underlying DX11 device used for frame capture","Get the DX11 surface representing the video frame’s …","","Calls <code>U::from(self)</code>.","","","","","","","","","A capture stream which can inter-operate with DXGI","","A video frame which can inter-operate with DXGI","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the DXGI adapter used by the capture stream for frame …","Get the DXGI device used by the capture stream for frame …","Get the surface texture for this video frame","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents an error while taking a screenshot","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Take a screenshot of the capturable content given a …","","","","The Chrominance (CbCr, Blue/Red) plane for a YCbCr format …","The requested plane isn’t valid for this frame","The Luminance (Y, brightness) plane for a YCbCr format …","the backend texture couldn’t be fetched","No Wgpu device was supplied to the capture stream","","The single RGBA plane for an RGBA format frame","A capture config which can be supplied with a Wgpu device","A capture stream which may have had a Wgpu device instance …","Represents an error getting the texture from a video frame","A video frame which can be used to create Wgpu textures","Identifies planes of a video frame","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the Wgpu device referenced by device wrapper supplied …","Gets the Wgpu device wrapper supplied to …","Get the texture for the given plane of the video frame","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents an error getting the data for an audio channel","The number of audio channels to capture","Represents audio channel data in an audio frame","Wraps a “slice” of audio data for one channel, …","A frame of captured audio","The rate to capture audio samples","","","","","","","","","","","","","A frame of captured video","Get the data buffer for the captured audio channel","","","","","","","","","","","","","","","Get the Instant that this frame was delivered to the …","Get the channel count of the captured audio","","","","","Get the dpi of the contents of the frame (accounting for …","Get the duration of this audio frames","","","","","Get the sequence id of this frame (monotonically …","Get the sequence id of this video frame (monotonically …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the nth sample for this channel data","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the length of this sample buffer","Get the time since the start of the stream that this audio …","Get the time since the start of the stream that this frame …","Get the sample rate of the captured audio","Get the raw size of the frame","","","","","","","","","","","","","","","","","","","","","","","","Windows-specific extensions","","A capturable window on Windows which provides a native …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents a 2D point","Represents an axis-aligned rectangle","Represents a 2D size","The point at (0, 0)","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","scale the size uniformly by some value","Scale the point uniformly by some value","Scale the rectangle uniformly","scale the size non-uniformly in x and y","Scale the point non-uniformly in x and y","Scale the rectangle non-uniformly in x and y","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,18,18,18,18,3,1,8,18,10,21,11,2,3,1,6,8,18,10,21,11,2,3,1,6,3,3,1,6,3,1,6,8,3,8,10,18,1,1,1,1,3,3,1,6,8,18,10,21,11,2,3,1,6,1,1,2,8,18,10,21,11,2,3,1,6,21,11,18,1,11,2,10,21,11,8,1,6,21,11,3,1,3,1,6,3,8,18,10,21,11,2,3,1,6,8,18,10,21,11,2,3,1,6,8,18,10,21,11,2,3,1,6,10,18,28,31,33,0,31,0,0,0,0,0,33,31,33,29,26,27,28,0,0,0,0,27,29,31,33,25,34,33,26,27,28,30,31,32,29,25,34,33,26,27,28,30,31,32,29,25,26,27,28,29,26,27,30,31,32,29,25,26,27,30,31,32,29,25,26,27,28,29,31,31,31,31,33,26,26,27,27,28,28,30,31,32,29,29,25,34,33,26,27,28,30,31,32,29,25,34,34,34,34,34,34,33,26,27,28,30,31,32,29,25,34,30,34,26,27,28,29,34,34,34,26,27,30,31,32,29,25,26,27,28,29,34,33,26,27,28,30,31,32,29,25,34,33,26,27,28,30,31,32,29,25,34,33,26,27,28,30,31,32,29,25,32,32,32,32,32,32,0,0,0,0,0,48,0,0,0,0,0,81,46,48,48,81,0,0,0,48,82,83,84,81,85,48,46,82,83,84,81,85,48,46,46,85,85,85,46,46,82,83,84,46,46,46,82,83,84,81,85,48,46,47,82,83,84,82,83,84,81,85,48,46,85,85,85,85,46,46,46,82,83,84,81,85,48,46,82,83,84,81,85,48,46,82,83,84,81,85,48,46,82,83,84,49,0,0,0,49,49,49,49,49,49,49,49,49,50,51,51,49,49,49,49,49,49,49,37,55,0,0,0,0,55,37,55,37,55,37,55,55,55,37,55,55,37,37,55,37,56,56,57,55,37,55,37,55,55,37,55,37,55,37,55,37,59,0,59,59,59,59,59,0,59,59,59,62,61,62,61,61,61,62,0,0,0,0,0,62,61,62,61,61,62,61,62,61,61,62,62,62,62,62,61,61,62,61,63,63,64,62,61,61,62,61,61,62,61,62,61,62,61,66,0,0,0,0,0,0,68,72,72,72,72,68,68,69,71,69,71,69,0,67,68,76,69,67,60,72,71,68,76,69,67,60,72,71,60,67,72,71,72,71,60,67,67,60,72,71,67,60,68,76,69,67,60,72,71,76,60,60,60,60,60,68,76,69,67,60,72,71,76,67,60,67,60,72,71,68,76,69,67,60,72,71,68,76,69,67,60,72,71,68,76,69,67,60,72,71,0,0,0,15,15,15,15,15,15,15,15,15,15,15,79,15,15,15,15,15,0,0,0,80,45,80,22,45,80,22,45,80,22,45,80,22,45,80,22,45,80,22,45,45,80,22,22,45,80,22,45,80,22,22,45,80,22,45,80,22,45,80,22,45,80,22,45,80,80],"f":"``````````````````````{bd}{ce{}{}}00000000000000000{f{{j{h}}}}{ff}{bb}{ll}{{ce}n{}{}}00{{}A`}{fAb}`{AdAf}`{{bb}Ah}{{ce}Ah{}{}}00{{fAj}Al}0{{bAj}Al}{{lAj}Al}{cc{}}00000000{bAn}{{bc}nB`}{dBb}{ce{}{}}0000000000{BdAh}{bAh}{AfBf}4{Bd{{Bh{Adf}}}}{Bj{{j{c}}}{}}{Af{{j{c}}}{}}`{bBl}{lBl}{Bj{{Bn{Bf{j{Bf}}}}}}{Af{{Bn{Bf{j{Bf}}}}}}{f{{j{h}}}}{bBb}<<<{cBb{}}{c{{Bh{e}}}{}{}}00000000000000000{cC`{}}00000000{AdBj}``````````````````````````{CbAh}{ce{}{}}0000000000000000000{Cd{{j{h}}}}{Cf{{j{h}}}}{Ch{{j{h}}}}{Cj{{j{h}}}}{CdCd}{CfCf}{ClCl}{CnCn}{D`D`}{CjCj}{CbCb}{{ce}n{}{}}000000{CdAb}{CfAb}{ChAb}{CjAb}{{CnCn}Ah}{{ce}Ah{}{}}00{{DbAj}Al}{{CdAj}Al}0{{CfAj}Al}0{{ChAj}Al}0{{ClAj}Al}{{CnAj}Al}{{D`Aj}Al}{{CjAj}Al}0{{CbAj}Al}{cc{}}000000000{DdDf}{Dd{{Bh{DhDj}}}}{DdDl}{Dd{{j{Dn}}}}{Dd{{j{{Eb{E`}}}}}}{ce{}{}}000000000{{CbD`c}{{Bh{DdCf}}}{{Ed{{Bh{DbCd}}}}Ef}}{{}Cl}{Ah{{j{Cb}}}}{Cd{{j{h}}}}{Cf{{j{h}}}}{Ch{{j{h}}}}{Cj{{j{h}}}}{Dd{{Bh{nCh}}}}{{}{{Eh{Cn}}}}69999999{cBb{}}000{c{{Bh{e}}}{}{}}0000000000000000000{cC`{}}000000000{{D`Bf}D`}{{lCn}D`}{{D`Ej}D`}{{D`Ah}D`}{{D`{Eb{E`}}}{{Bh{D`Bb}}}}{{bCn}{{Bh{D`Cj}}}}````````````````````{ce{}{}}0000000000000{El{{j{h}}}}```{ElEl}{{ce}n{}{}}```{ElAb}{{ElAj}Al}0{cc{}}000000{En{{Bh{F`El}}}}```7777777````67{cBb{}}{c{{Bh{e}}}{}{}}0000000000000{cC`{}}000000```````::{Fb{{j{h}}}}{FbFb}9{FbAb}{{FbAj}Al}08{FdDf}{Ff{{Bh{{Bn{FhFj}}Fb}}}}{Ff{{Bh{{Bn{FlFj}}Fb}}}}{ce{}{}}70:998``````0000{Fn{{j{h}}}}{Dj{{j{h}}}}{FnFn}{{ce}n{}{}}{FnAb}{DjAb}{{FnAj}Al}0{{DjAj}Al}0{cc{}}0{G`{{Bh{DhDj}}}}{G`Dl}{Gb{{Bh{{Bn{GdFj}}Fn}}}}<<;:<{cBb{}}0{c{{Bh{e}}}{}{}}000{cC`{}}0``??{{GfAj}Al}7{ce{}{}}{{CbD`}{{Bh{GhGf}}}}443````````````1111{Gj{{j{h}}}}{GlGl}{GjGj}{{ce}n{}{}}0{GjAb}{{GlGl}Ah}{{ce}Ah{}{}}00{{GlAj}Al}{{GjAj}Al}0{cc{}}0{Gn{{j{Dn}}}}{Gn{{j{{Eb{E`}}}}}}{{H`Gl{j{Ab}}}{{Bh{HbGj}}}}>><>>{cBb{}}{c{{Bh{e}}}{}{}}000{cC`{}}0{{Hd{Eb{E`}}}{{Bh{HdBb}}}}```````````````````{{HfBf}{{Bh{HhHj}}}}{ce{}{}}0000000000000{GhHl}{HfHn}{I`I`}{HnHn}{{ce}n{}{}}0{GhIb}{HfId}{{HfAj}Al}{{GhAj}Al}{{I`Aj}Al}{{HnAj}Al}{HfIf}{GhIf}{cc{}}000000{{{Ih{c}}Bf}cIj}{Gh{{Bh{F`El}}}}{Gh{{Bh{{Bn{FhFj}}Fb}}}}{Gh{{Bh{{Bn{FlFj}}Fb}}}}{Gh{{Bh{{Bn{GdFj}}Fn}}}}{{GhGl{j{Ab}}}{{Bh{HbGj}}}}{ce{}{}}000000{{{Ih{c}}}BfIj}?{GhId}{HfI`}{GhEj}44{c{{Bh{e}}}{}{}}0000000000000{cC`{}}000000```66{AnAn}{{ce}n{}{}}{{}An}{{AnAn}Ah}{{ce}Ah{}{}}00{{AnAj}{{Bh{nIl}}}}{cc{}}{InAn}>>998````>>>>>>{EjEj}{J`J`}{BlBl}999{{EjAj}Al}{{J`Aj}Al}{{BlAj}Al}777`{ce{}{}}00`{{EjIb}Ej}{{J`Ib}J`}{{BlIb}Bl}{{Ej{Bn{IbIb}}}Ej}{{J`{Bn{IbIb}}}J`}{{Bl{Bn{IbIb}}}Bl}`666{c{{Bh{e}}}{}{}}00000{cC`{}}00```","c":[],"p":[[5,"CapturableWindow",7],[5,"CapturableApplication",7],[6,"CapturableContentError",7],[10,"Error",677],[6,"Option",678],[5,"CapturableDisplay",7],[1,"unit"],[5,"CapturableWindowFilter",7],[1,"str"],[5,"CapturableContent",7],[5,"CapturableDisplayIterator",7],[1,"bool"],[5,"Formatter",679],[8,"Result",679],[5,"HWND",609],[10,"Hasher",680],[5,"String",681],[5,"CapturableContentFilter",7],[1,"usize"],[6,"Result",682],[5,"CapturableWindowIterator",7],[5,"Rect",628],[1,"tuple"],[5,"TypeId",683],[5,"CaptureAccessToken",131],[6,"StreamError",131],[6,"StreamCreateError",131],[6,"StreamStopError",131],[6,"CaptureConfigError",131],[5,"AudioCaptureConfig",131],[6,"CapturePixelFormat",131],[5,"CaptureConfig",131],[6,"StreamEvent",131],[5,"CaptureStream",131],[5,"ID3D11Device",684],[5,"IDXGIAdapter",685],[6,"WindowsDxgiCaptureStreamError",416],[5,"IDXGIDevice",685],[5,"Device",686],[10,"AsRef",687],[5,"Arc",688],[10,"FnMut",689],[10,"Send",690],[1,"slice"],[5,"Size",628],[6,"VideoFrameBitmapError",303],[10,"VideoFrameBitmap",303],[6,"FrameBitmap",303],[6,"WindowsDx11VideoFrameError",393],[10,"WindowsDx11CaptureStream",393],[10,"WindowsDx11VideoFrame",393],[5,"IDirect3DSurface",691],[5,"DirectXPixelFormat",692],[5,"ID3D11Texture2D",684],[6,"WindowsDxgiVideoFrameError",416],[10,"WindowsDxgiCaptureStream",416],[10,"WindowsDxgiVideoFrame",416],[5,"IDXGISurface",685],[6,"ScreenshotError",454],[5,"VideoFrame",512],[6,"WgpuVideoFrameError",465],[6,"WgpuVideoFramePlaneTexture",465],[10,"WgpuCaptureStreamExt",465],[10,"WgpuVideoFrameExt",465],[5,"Texture",686],[10,"WgpuCaptureConfigExt",465],[5,"AudioFrame",512],[6,"AudioChannelData",512],[6,"AudioBufferError",512],[5,"Instant",693],[6,"AudioChannelCount",512],[6,"AudioSampleRate",512],[1,"f64"],[5,"Duration",694],[1,"u64"],[5,"AudioChannelDataSamples",512],[10,"Copy",690],[5,"Error",679],[10,"WindowsCapturableWindowNativeWindowHandle",609],[5,"Point",628],[6,"VideoRange",303],[5,"FrameBitmapBgraUnorm8x4",303],[5,"FrameBitmapRgbaUnormPacked1010102",303],[5,"FrameBitmapRgbaF16x4",303],[5,"FrameBitmapYCbCr",303]],"b":[[57,"impl-Display-for-CapturableContentError"],[58,"impl-Debug-for-CapturableContentError"],[204,"impl-Display-for-StreamError"],[205,"impl-Debug-for-StreamError"],[206,"impl-Display-for-StreamCreateError"],[207,"impl-Debug-for-StreamCreateError"],[208,"impl-Debug-for-StreamStopError"],[209,"impl-Display-for-StreamStopError"],[213,"impl-Display-for-CaptureConfigError"],[214,"impl-Debug-for-CaptureConfigError"],[342,"impl-Display-for-VideoFrameBitmapError"],[343,"impl-Debug-for-VideoFrameBitmapError"],[403,"impl-Debug-for-WindowsDx11VideoFrameError"],[404,"impl-Display-for-WindowsDx11VideoFrameError"],[432,"impl-Display-for-WindowsDxgiVideoFrameError"],[433,"impl-Debug-for-WindowsDxgiVideoFrameError"],[434,"impl-Debug-for-WindowsDxgiCaptureStreamError"],[435,"impl-Display-for-WindowsDxgiCaptureStreamError"],[492,"impl-Debug-for-WgpuVideoFrameError"],[493,"impl-Display-for-WgpuVideoFrameError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
